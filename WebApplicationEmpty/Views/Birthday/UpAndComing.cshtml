@using System.Diagnostics
@using WebApplicationEmpty.Models;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model DateTime

@{
    //List of birthdays
    var birthdays = new List<Birthday>()
    {
        new Birthday {Person = "Billie", BornIn = new DateTime(2021, 10, 23)},
        new Birthday {Person = "Maria", BornIn = new DateTime(1988, 11 , 4)},
        new Birthday {Person = "Johan", BornIn = new DateTime(1989, 2 , 20)},
        new Birthday {Person = "Emil", BornIn = new DateTime(1989, 3 , 14)},
        new Birthday {Person = "Jon", BornIn = new DateTime(1989, 5 , 3)}

    };

    //Today's date variable
    var today = Model;
    

    //Sort by birthday closest to today first
    birthdays.Sort((birthdayA, birthdayB) => DateTime.Compare(birthdayA.ThisYear(today), birthdayB.ThisYear(today)));

   

    //Get birthdays within two months from today
    var birthdaysWithinTwoMonths = birthdays
        .Where(birthday => (birthday.ThisYear(today) - today).Days <= 61)
        .Where(birthday => (birthday.ThisYear(today) - today).Days >= 0)
        .ToList();

    
    //select only the closest birthday
    //var birthday = birthdays.FirstOrDefault();

}


<div>
    <h1>Todays date: @today.ToString("D")</h1>
</div>

<div>
    <h3>UPCOMING BIRTHDAYS</h3>
    @if (birthdaysWithinTwoMonths.Count > 0)
    {
        foreach (var birthday in birthdaysWithinTwoMonths)
        {
            printBirthdays(birthday, today);
        }
        
    }
    else
    {
        <p>There are no birthdays within the next two months</p>
    }
</div>

@functions
{
 
    void printBirthdays(Birthday birthday, DateTime today)
    {
        <p>
         @birthday.Person birthday is on 
         @birthday.ThisYear(today).ToString("D") 
         that's in @((birthday.ThisYear(today) - today).Days) days 
         </p>;

    }
}